O que e controle de versão 

	--> Uma tecnica que ajuda a GERENCIAR O CODIGO-FONTE de uma aplicação
	--> Registrando TODAS AS MODIFICAÇÕES de codigos, podendo reverter as mesmas;
	--> Criar versões de um software em diferentes estagios, podendo ALTERAR FACILMENTE ENTRE ELAS;
	--> Cada membro da equipe pode trabalahr em uma versão diferente
	--> Ha ferramentas para trabalhar o controle de versão como:  GIT e SVN


O que é GIT

	--> O Sitema de controle de versão MAIS UTILIZADO DO MUNDO atualmente;
	--> O git é baseado em REPOSITORIOS, que contêm todas a as versões do código e tambem as copias de cada desenvolvedor
	--> Todas as operações do git SÃO OTIMIZADAS PARA TER ALTO DESEMPENHO ;
	--> Todos os objetos do git são PROTEGIDOS COMO CRIPTOGRAFIA para evitar alterações indevidas e maliciosas;
	--> O git é um PROJETO DE CODIGO ABERTO


Codigos do GIT

	--> git init: cria um repositorio
 	--> git status: ve o status do git, as pastas os arquivos ali presentes
	--> git add: adiciona arquivos ao git 
	--> git add . : adiciona Todos os arquivos de uma vez só
	--> git remote -v: ve a origem aonde voce esta conectado, " origin  https://github.com/Drakkio/Curso_GitHub.git (push) "
	--> git remote rm ______: remove a origem que voce esta conectado, e so colocar o nome da origem na parte sublinhada
	==========================================================
	--> git commit -m "Update": Voce commita e envia uma mensagem de atualização
	--> Exemplo: git commit arquivo.txt -m "Texto Alterado"
	==========================================================
	--> git commit -a "Update": Voce comenda diversos arquivos de uma vez só
	--> git branch -M _____: aqui voce seleciona o caminho da branch, seja main, master ou outro nome escolhuido
	--> git push -u origin main: aqui voce sobe os dados comitado para o servidor
	
	 U: Untraked (O arquivo ou pasta necessita de um Add)
	 A: Add (Adicionado)
	 M: Modified (modificado)


	