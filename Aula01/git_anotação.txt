O que e controle de versão 

	--> Uma tecnica que ajuda a GERENCIAR O CODIGO-FONTE de uma aplicação
	--> Registrando TODAS AS MODIFICAÇÕES de codigos, podendo reverter as mesmas;
	--> Criar versões de um software em diferentes estagios, podendo ALTERAR FACILMENTE ENTRE ELAS;
	--> Cada membro da equipe pode trabalahr em uma versão diferente
	--> Ha ferramentas para trabalhar o controle de versão como:  GIT e SVN


O que é GIT

	--> O Sitema de controle de versão MAIS UTILIZADO DO MUNDO atualmente;
	--> O git é baseado em REPOSITORIOS, que contêm todas a as versões do código e tambem as copias de cada desenvolvedor
	--> Todas as operações do git SÃO OTIMIZADAS PARA TER ALTO DESEMPENHO ;
	--> Todos os objetos do git são PROTEGIDOS COMO CRIPTOGRAFIA para evitar alterações indevidas e maliciosas;
	--> O git é um PROJETO DE CODIGO ABERTO


Codigos do GIT

	--> git init: cria um repositorio
 	--> git status: ve o status do git, as pastas os arquivos ali presentes
	--> git add: adiciona arquivos ao git 
	--> git add . : adiciona Todos os arquivos de uma vez só
	--> git remote -v: ve a origem aonde voce esta conectado, " origin  https://github.com/Drakkio/Curso_GitHub.git (push) "
	--> git remote rm ______: remove a origem que voce esta conectado, e so colocar o nome da origem na parte sublinhada

	==========================================================

	--> git commit -m "Update": Voce commita e envia uma mensagem de atualização
	--> Exemplo: git commit arquivo.txt -m "Texto Alterado"

	==========================================================

	--> git commit -a "Update": Voce comenda diversos arquivos de uma vez só
	--> Exemplo: git commit -a -m "Texto Alterado" --> A letra -a significa todos os arquivos

	==========================================================

	--> git branch -M _____: aqui voce seleciona o caminho da branch, seja main, master ou outro nome escolhuido
	--> git push -u origin main e/ou git push: aqui voce sobe os dados comitado para o servidor 
	--> git pull: busca os arquivos la do repositorio sendo isto nao precisa estar em uma maquina local
	--> git clone: clona o repositorio no servidor remoto
	--> git rm _____: remove o arquivo no repositorio, na area sublinhada e para ser colocado o nome do arquivo e sua extensão
	--> git log: mostra as modificações que foram feitas no projeto e/ou commits

	==========================================================
	--> git mv: podemos renomear um arquivo e por der movido para outra pasta 	
	Exemplo: git mv ______ (<-- nome do arquivo e sua extensão) _______ (<-- Pasta para onde sera movido)
	git mv rodape.css css/rodape.css.

	Para renomear e necessario colocar o nome antigo e depois o nome novo
	Exemplo: git mv css/rodape.css css/rodape_inicial.css 
	==========================================================

	git checkout: funciona como um ctrl-z, o arquivo volta ao estado anterior	
	isto significa que ele tira as notificação de "modificado" 

	Comando: git checkout css (<--nome da pasta) / style.css (<--nome do arquivo e sua extensão)
	git checkout css/style.css

	==========================================================

	gitignore: ignora arquivos de um projeto
	mas para isso deve ser criado um arquivo .gitignore na pasta onde deseja ignorar
	e dentro deste arquivo colocar os nomes dos arquivos a serem ignorados
	 ANTES de criar os arquivos.

	 Exemplo:

	 	.gitignore
			l.txt
			z.css
			pata_ignorada <-- neste caso deve ser colocado o nome da pasta e um simbolo /*

			( Exemplo: pasta_ignorada/* <-- assim seus atributos e/ou arquivos seram ignorados )
				estes arquivos seram automaticamente ignorados

	==========================================================

	--> git reset: reseta mudanças feitas só que
	' TODAS AS ALTERAÇÕES COMMITADAS E TAMBEM AS PENDENTES SERAO EXCLUIDAS '
	
		Exemplo: git reset --hard origin/master
			git reset --hard (<-- Tag) origin/master (<-- branch)

	==========================================================

	 U: Untraked (O arquivo ou pasta necessita de um Add)
	 A: Add (Adicionado)
	 M: Modified (modificado)
	 D: Deleted (Deletado)
	  


	