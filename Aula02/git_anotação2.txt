Git Branches

    --> O que são Branchs
        Branch é a forma do git SEPARAR AS VERSÕES DOS PROJETOS


    --> Criar Branch

        git branch: Aqui voce visualiza a branch na qual voce esta
        git branch ____ (nome do branch)<-- aqui voce cria a branch e so colocar o nome na parte sublinhada 

    --> Deletar Branches

        git branch d e/ou --delete _____ (nome do branch) -: aqui voce deleta a branch criada
        Exemple: git branch Cap_Branchs -d <-- tambem serve deste modo

    --> Mudando de branch

        git checkout -b nome: Aqui voce troca de branch, so que voce cria e troca automaticamente e leva os alterações
        git checkout ____ (nome do branch) : Aqui voce troca de branch
        OBS: Alterando o branch podemos levar alterações que não forma 
            commitadas juntos, TOME CUIDADO
            "SEMPRE COMMITAR ANTES"

    Regras 

        --> enquanto estiver em uma branch não sai dela te você dar um commit 
        --> faça branchs a partir da branch master/main 
        --> atualize o seu repositorio atravez do git push

    --> Unindo branch

        git merge _____ (nome do branch): A partir desta branch selecionada voce manda todos os dados alterados
        para o branch atual que esta, sendo isto, este comando faz o commit automaticamente, sendo isto
        fascilita na hora de outros Devs fazerem um clone ou um push dos dados.

        Só que e necessario, depois do comando merge fazer um git push para atualizar o respositorio
        Exemplo: git merge Cap_teste 

    --> Stash

        git stash: Salva as modificações atuais para prosseguir 
        com uma outra abordagem de solução e nao perder o código

        Obs: o git stash funciona como se voce coloca-se ou salva-se algo
            na lixeira sendo isto, ele so da um SAVE do que voce fez ate aquele ponto X
            e reseta ate o ponto que voce tinha começado a fazer por 
            Exemplo: ele estava em Z salava e volta para d

           Obs: ele so volta em arquivos que estao na area de 
          transferencia e/ou local em (apenas arquivos em M - Modificed).

        --> git stash: list: Exibe a lista de stash 
            git stash apply ___ (id da stash): recupera o a stash
                Exemplo: git stash apply 1

    --> Removendo Stash

        git stash clear: limpa todas as stash de uma branch 
        git stash drop ____ (id da stash): limpa a stash de selecionada 

    --> criando Tags

        git tag -a ___ (nome da tag) - m "mesagem a atribuir"
            Este comando serve como um checkpoint de um branch

    --> Verificando e alterando Tags    

        git show _____ (nome da tag) : com este comando voce verifica a tag
        git checkout _____ (nome da tag) : com este comando voce troca a tag

        teste de tag ok

    

        

            



        

        
        

            



